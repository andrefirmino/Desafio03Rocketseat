{"version":3,"sources":["services/api.js","App.js","index.js"],"names":["api","axios","create","baseURL","App","useState","repositories","setRepositories","a","post","title","url","techs","response","repository","data","id","delete","projects1","Array","from","projectId","findIndex","project","splice","useEffect","get","then","data-testid","map","key","onClick","handleRemoveRepository","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAMeA,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,0B,MCmDIC,MAhDf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNC,EADM,KACQC,EADR,iDASb,8BAAAC,EAAA,sEACyBR,EAAIS,KAAK,gBAAiB,CAC7CC,MAAQ,SACRC,IAAQ,qCACTC,MAAQ,CAAC,QAAQ,UAAU,QAJhC,OACQC,EADR,OAOQC,EAAaD,EAASE,KAE5BR,EAAgB,GAAD,mBAAKD,GAAL,CAAmBQ,KATpC,4CATa,kEAqBb,WAAsCE,GAAtC,iBAAAR,EAAA,sEACQR,EAAIiB,OAAJ,wBAA4BD,IADpC,OAEQE,EAAYC,MAAMC,KAAKd,GACvBe,EAAYf,EAAagB,WAAU,SAAAC,GAAO,OAAEA,EAAQP,KAAOA,KACjEE,EAAUM,OAAOH,EAAW,GAC5Bd,EAAgBW,GALlB,4CArBa,sBA6Bb,OA1BAO,qBAAU,WACRzB,EAAI0B,IAAI,iBAAiBC,MAAK,SAAAd,GAC5BN,EAAgBM,EAASE,WAE1B,CAACT,IAuBF,6BACE,wBAAIsB,cAAY,mBACXtB,EAAauB,KAAI,SAAAN,GAAO,OACvB,wBAAIO,IAAKP,EAAQP,IACdO,EAAQb,MACT,4BAAQqB,QAAS,kBAnChB,2CAmCsBC,CAAuBT,EAAQP,MAAtD,gBAQR,4BAAQe,QA3CC,4CA2CT,eC7CNE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.10403a95.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:3003\",\n});\n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\n\nimport api from './services/api'\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([])\n\n  useEffect(()=> {\n    api.get('/repositories').then(response=>{\n      setRepositories(response.data)\n    })\n  }, [repositories])\n\n  async function handleAddRepository() {\n    const response = await api.post('/repositories', {\n        title : 'React3',\n        url   : \"http://www.github.com/andrefirmino\",\n\t      techs : [\"react\",\"reactjs\",\"js\"]\n    })\n\n    const repository = response.data\n    \n    setRepositories([...repositories, repository])\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`/repositories/${id}`)\n    const projects1 = Array.from(repositories)\n    const projectId = repositories.findIndex(project=>project.id === id)\n    projects1.splice(projectId, 1)\n    setRepositories(projects1)\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n          {repositories.map(project => \n            <li key={project.id}>\n              {project.title}\n              <button onClick={() => handleRemoveRepository(project.id)}>\n                Remover\n              </button>\n            \n            </li>\n            )}\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}